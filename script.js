// ---------- DOM ----------
const texto = document.getElementById('texto');
const opcoes = document.getElementById('opcoes');
const img = document.getElementById('imagem-cena');

// ---------- Bases de imagem (SEM extens√£o) ----------
const BASE = {
  membrana:   'assets/imagens/01_membrana',
  tipos:      'assets/imagens/02_procarionte_vs_eucarionte',
  animal:     'assets/imagens/03_eucarionte_animal',
  vegetal:    'assets/imagens/04_eucarionte_vegetal',
  niveis:     'assets/imagens/05_niveis_organizacao',
  tecidos:    'assets/imagens/06_tecidos'
};

// ---------- Utilit√°rios ----------
function candidatosPorExtensao(baseSemExt, exts = ['png','jpg','jpeg','svg','webp']) {
  return exts.map(ext => `${baseSemExt}.${ext}`);
}

function tentarCarregarSequencial(urls) {
  return new Promise(resolve => {
    let i = 0;
    const tentativa = () => {
      if (i >= urls.length) return resolve(null);
      const url = urls[i++] + '?v=' + Date.now(); // evita cache
      const im = new Image();
      im.onload = () => resolve(url);
      im.onerror = tentativa;
      im.src = url;
    };
    tentativa();
  });
}

/**
 * Carrega a imagem pela chave do cap√≠tulo.
 * Retorna true se carregou, false se falhou (e j√° mostra UI de erro com diagn√≥stico).
 */
async function carregarImagem(chave) {
  const base = BASE[chave];
  if (!base) {
    mostrarErro(`Chave de imagem desconhecida: ${chave}`);
    return false;
  }
  const candidatos = candidatosPorExtensao(base);
  const achou = await tentarCarregarSequencial(candidatos);
  if (achou) {
    img.src = achou;
    img.classList.remove('hidden');
    return true;
  } else {
    img.classList.add('hidden');
    // UI de erro + diagn√≥stico
    texto.innerHTML =
`‚ö†Ô∏è N√£o consegui carregar a imagem deste cap√≠tulo.

Arquivos testados:
${candidatos.join('\n')}

Dicas:
‚Ä¢ Confirme o nome e a extens√£o em assets/imagens/
‚Ä¢ Teste abrindo cada URL direto no navegador (toque nos bot√µes abaixo)`;
    opcoes.innerHTML = '';
    candidatos.forEach(c => {
      const b = document.createElement('button');
      b.textContent = `Abrir: ${c.split('/').pop()}`;
      b.onclick = () => window.open(c, '_blank');
      opcoes.appendChild(b);
    });
    const voltar = document.createElement('button');
    voltar.textContent = 'Voltar para Tipos de C√©lulas';
    voltar.onclick = cap2;
    opcoes.appendChild(voltar);
    opcoes.classList.remove('hidden');
    return false;
  }
}

function mostrarErro(msg) {
  img.classList.add('hidden');
  texto.textContent = `‚ö†Ô∏è ${msg}`;
  opcoes.innerHTML = '';
  const back = document.createElement('button');
  back.textContent = 'Voltar ao in√≠cio';
  back.onclick = iniciar;
  opcoes.appendChild(back);
  opcoes.classList.remove('hidden');
}

function digitarTexto(t, vel = 24, done) {
  let i = 0;
  texto.innerHTML = "";
  opcoes.classList.add('hidden');
  (function escrever() {
    if (i < t.length) {
      texto.innerHTML += t.charAt(i++);
      setTimeout(escrever, vel);
    } else {
      if (done) setTimeout(done, 220);
    }
  })();
}

function botoes(lista) {
  opcoes.innerHTML = "";
  lista.forEach(({ texto, acao }) => {
    const b = document.createElement('button');
    b.textContent = texto;
    b.onclick = acao;
    opcoes.appendChild(b);
  });
  opcoes.classList.remove('hidden');
}

// ---------- Fluxo (somente conte√∫do do material) ----------
function iniciar() {
  digitarTexto(
`üîê BEM-VINDO!

Este jogo cobre exatamente o conte√∫do do material:
1) Membrana plasm√°tica
2) Procarionte √ó Eucarionte
3) C√©lula eucarionte ANIMAL
4) C√©lula eucarionte VEGETAL
5) N√≠veis de organiza√ß√£o
6) Tecidos`,
    24,
    () => botoes([{ texto: "Come√ßar", acao: cap1 }])
  );
}

/* --------- CAP.1 Membrana --------- */
async function cap1() {
  const ok = await carregarImagem('membrana');
  if (!ok) return; // n√£o segue se a imagem falhou
  digitarTexto(
`üß© CAP√çTULO 1 ‚Äî MEMBRANA PLASM√ÅTICA

A membrana plasm√°tica contorna a c√©lula e controla a ENTRADA/SA√çDA de subst√¢ncias (permeabilidade seletiva).`,
    24,
    () => botoes([{ texto: "Tipos de c√©lulas", acao: cap2 }])
  );
}

/* --------- CAP.2 Tipos --------- */
async function cap2() {
  const ok = await carregarImagem('tipos');
  if (!ok) return;
  digitarTexto(
`üß© CAP√çTULO 2 ‚Äî TIPOS DE C√âLULAS

‚Ä¢ PROCARIONTE: n√£o possui n√∫cleo delimitado; DNA no citoplasma; membrana plasm√°tica; pode ter parede celular; ribossomos.
‚Ä¢ EUCARIONTE: possui n√∫cleo delimitado (carioteca) e v√°rias organelas membranosas.

Escolha para LER sobre cada c√©lula eucarionte:`,
    24,
    () => botoes([
      { texto: "C√âLULA EUCARIONTE ANIMAL", acao: cap3 },
      { texto: "C√âLULA EUCARIONTE VEGETAL", acao: cap4 },
      { texto: "Avan√ßar: N√≠veis de organiza√ß√£o", acao: cap5 }
    ])
  );
}

/* --------- CAP.3 Animal --------- */
async function cap3() {
  const ok = await carregarImagem('animal');
  if (!ok) return;
  digitarTexto(
`üß© CAP√çTULO 3 ‚Äî C√âLULA EUCARIONTE ANIMAL

Principais itens do material:
‚Ä¢ Membrana plasm√°tica (delimita a c√©lula), citosol
‚Ä¢ N√∫cleo: carioteca e nucl√©olo
‚Ä¢ R.E. liso (lip√≠dios) e R.E. rugoso (com ribossomos; prote√≠nas)
‚Ä¢ Ribossomos (s√≠ntese de prote√≠nas)
‚Ä¢ Mitoc√¥ndrias (gera√ß√£o de energia)
‚Ä¢ Complexo golgiense (secre√ß√£o/empacotamento)
‚Ä¢ Lisossomos (digest√£o intracelular)
‚Ä¢ Centr√≠olos (c√≠lios/flagelos)`,
    24,
    () => botoes([
      { texto: "Ver C√âLULA EUCARIONTE VEGETAL", acao: cap4 },
      { texto: "Voltar para TIPOS DE C√âLULAS", acao: cap2 },
      { texto: "Ir para N√≠veis de organiza√ß√£o", acao: cap5 }
    ])
  );
}

/* --------- CAP.4 Vegetal --------- */
async function cap4() {
  const ok = await carregarImagem('vegetal');
  if (!ok) return;
  digitarTexto(
`üß© CAP√çTULO 4 ‚Äî C√âLULA EUCARIONTE VEGETAL

Semelhan√ßas com a animal (membrana, citosol, ribossomos, R.E., mitoc√¥ndrias, complexo golgiense, n√∫cleo).
Destaques espec√≠ficos:
‚Ä¢ Parede celular (celul√≥sica)
‚Ä¢ Vac√∫olos (armazenamento, principalmente √°gua)
‚Ä¢ Cloroplastos (fotoss√≠ntese ‚Üí glicose)`,
    24,
    () => botoes([
      { texto: "Ver C√âLULA EUCARIONTE ANIMAL", acao: cap3 },
      { texto: "Voltar para TIPOS DE C√âLULAS", acao: cap2 },
      { texto: "Ir para N√≠veis de organiza√ß√£o", acao: cap5 }
    ])
  );
}

/* --------- CAP.5 N√≠veis --------- */
async function cap5() {
  const ok = await carregarImagem('niveis');
  if (!ok) return;
  digitarTexto(
`üß© CAP√çTULO 5 ‚Äî N√çVEIS DE ORGANIZA√á√ÉO

C√©lula ‚Üí Tecido ‚Üí √ìrg√£o ‚Üí Sistema ‚Üí Organismo.`,
    24,
    () => botoes([
      { texto: "Tecidos", acao: cap6 },
      { texto: "Voltar aos Tipos de c√©lulas", acao: cap2 }
    ])
  );
}

/* --------- CAP.6 Tecidos --------- */
async function cap6() {
  const ok = await carregarImagem('tecidos');
  if (!ok) return;
  digitarTexto(
`üß© CAP√çTULO 6 ‚Äî TECIDOS (Animal)

‚Ä¢ Epitelial: revestimento/barreira
‚Ä¢ Conjuntivo: conex√£o/sustenta√ß√£o/defesa/preenchimento/transporte (inclui SANGUE)
‚Ä¢ Muscular: contra√ß√£o (volunt√°ria ou n√£o)
‚Ä¢ Nervoso: impulsos; interpreta√ß√£o e armazenamento de informa√ß√µes`,
    24,
    () => botoes([
      { texto: "Voltar ao in√≠cio", acao: iniciar },
      { texto: "Voltar aos Tipos de c√©lulas", acao: cap2 }
    ])
  );
}

// ---------- Start ----------
iniciar();

